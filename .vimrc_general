Plug 'scrooloose/nerdtree'

set autoread
set autowriteall
set updatetime=300
set encoding=utf-8
set ignorecase
set incsearch
set smartcase
set nowrap

:let mapleader = "\<Space>"

imap jk <Esc>

nnoremap <Leader>w :wa<CR>

nnoremap <C-l> <C-w><C-l>
nnoremap <C-h> <C-w><C-h>
nnoremap <C-k> <C-w><C-k>
nnoremap <C-j> <C-w><C-j>

nnoremap <C-n> :bnext<CR>
nnoremap <C-p> :bprevious<CR>

nnoremap <Leader>yf :let @+=expand("%")<CR>

nnoremap <silent> <Leader>vc :call QuickFix_toggle()<CR>

nnoremap <Leader>vf :NERDTreeFind<CR>

" Toggle quickfix window.
function! QuickFix_toggle()
    for i in range(1, winnr('$'))
        let bnum = winbufnr(i)
        if getbufvar(bnum, '&buftype') == 'quickfix'
            cclose
            return
        endif
    endfor

    copen
endfunction

" Persistent undo
let undo_dir=$HOME.'/.vim/undo'
if !isdirectory(undo_dir)
  call mkdir(undo_dir, 'p')
endif
set undofile
let &undodir=undo_dir
